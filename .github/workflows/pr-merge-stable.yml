# Unique name for this workflow
name: Deploy QA branch to QA org

# Definition when the workflow should run
on:
    pull_request:
      types:
        - closed
      branches: [ feature/release/**, bugfix/release/** ]
      paths:
        - 'force-app/**'
            

# Jobs to be executed
jobs:
    validate-deployment-on-qa-org:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 
                  
            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v2
              with:
                fetch-depth: 0


            - name: 'Get Name of Branch That trigger PR'
              shell: bash
              run: |
                  echo "SOURCE=${{github.head_ref}}" >> $GITHUB_ENV 

            - name: 'Get feature branch first commit ref'
              run: | 
                  echo "FROM_POINT"=$(git merge-base origin/${{ github.base_ref }} origin/${{ env.SOURCE }}) >> $GITHUB_ENV

            - name: 'Get target branch'
              run: |
                  echo " "

            # We use SFDX Git Delta to create a directory with only the metadata that has changed.
            # this allows us to deploy only those changes, as opposed to deploying the entire branch. 
            # This helps reducing deployment times
            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from ${{ env.FROM_POINT }} --output changed-sources/ --generate-delta --source force-app/ 

            - name: Show content of changed-sources
              shell: bash
              run: |
                  ls -LR changed-sources/

            # Store secret for production org
            - name: 'Populate auth file with SFDX_URL secret of the integration and staging orgs'
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_DEV_URL}} > ./SFDX_DEV_URL.txt

            #Authenticate to org
            - name: 'Authenticate to QA Org'
              run: sfdx auth:sfdxurl:store -f ./SFDX_DEV_URL.txt -s -a qa

            - name: 'Deploy the entire branch to QA org'
              run: sfdx force:source:deploy -x changed-sources/package/package.xml --testlevel RunLocalTests --json

            - name: 'Deploy destructive changes (if any) to Production org'
              run: sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings 
